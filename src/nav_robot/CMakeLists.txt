cmake_minimum_required(VERSION 3.8)
project(nav_robot)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(urdf REQUIRED)
find_package(xacro REQUIRED)
find_package(robot_state_publisher REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(yaml-cpp REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

target_link_libraries(task_manager_node yaml-cpp)

#
add_executable(battery_sim_node scripts/battery_state.cpp)
ament_target_dependencies(battery_sim_node rclcpp sensor_msgs nav_msgs std_srvs geometry_msgs task_manager_node)

install(TARGETS
  battery_sim_node
  DESTINATION lib/${PROJECT_NAME})
#

install(DIRECTORY urdf launch scripts worlds maps config config DESTINATION share/${PROJECT_NAME})

ament_package()
